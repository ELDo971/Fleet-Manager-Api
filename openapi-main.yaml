openapi: 3.0.0
servers:
  - url: "http://localhost:11021"
info:
  title: OpenAPI Specification
  version: "1"

paths:
  /users:
    get:
      operationId: listUsers
      summary: "List all users"
      parameters:
        - name: "sortBy"
          in: "query"
          description: "Sort by"
          required: false
          schema:
            type: "string"
        - name: "sortDirection"
          in: "query"
          description: "Sort direction"
          required: false
          schema:
            type: "string"
            enum: ["asc", "desc"]
      responses:
        "200":
          description: A list of users
    post:
      operationId: registerUser
      summary: "Register a new user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [fullName, email, password]
              properties:
                fullName:
                  type: string
                  description: "The full name of the user"
                email:
                  type: string
                  description: "The email address of the user"
                password:
                  type: string
                  description: "The password for the user"
                role:
                  type: string
                  description: "The role of the user (optional, default: 'USER')"
                  enum: ["USER", "ADMIN", "MANAGER"]  # Adjust role options based on your role enum
                status:
                  type: string
                  description: "The status of the user (optional, default: 'ACTIVE')"
                  enum: ["ACTIVE", "INACTIVE"]  # Adjust status options based on your status enum
      responses:
        "200":
          description: "User created successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      fullName:
                        type: string
                      role:
                        type: string
                      status:
                        type: string
        "400":
          description: "Bad request, validation errors or email already exists"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
